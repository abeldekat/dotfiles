# this mode explicitly overrides super + n effictively producing a toggle
# Back to normal mode.
{Escape, super + n}
    . $XDG_CONFIG_HOME/sxhkd/normal.mode

# Below a section taken from cpdfd to test.
# Note: The external rules for automatic placement of nodes into receptacles and preselections are not applied
# own_script_bspwm_node_resize: not used

# Not used:
# super + {_,shift + ,ctrl + shift +,ctrl +}{0-9}
# 	;bspwm_dynamic_desktops {--df,--ns,--nm,--da} {0-9}

# Swap focused window with the one in the given direction.  If there is
# no window in that direction, a receptacle will be created.  Inputting
# any direction again will move the focused window to the position of
# the receptacle.  This will effectively remove it from the current
# layout, creating a more fluid workflow that does not constrain you to
# the tree of the tiling scheme.
#
# IF you only ever want to move a window into an existing one and avoid
# the added features of the scripted behaviour, use the following
# command instead:
#
# 	bspc node -s {west,south,north,east}
#
# TIP after breaking free from the layout, you can use --balance to
# spread out the nodes (see the key chord further down).  You may also
# --rotate the tree.
#
# bspwm_smart_move is part of my dotfiles (link in the description).
 {h,j,k,l}
	bspwm_smart_move {west,south,north,east}

# Advanced operations (receptacles and scripted actions)
# ------------------------------------------------------
# NOTE The behaviour of preselections and receptacles is regulated by my
# bspwm_external_rules command (which is called from within bspwmrc).

# Insert receptacle following the tiling scheme or preselection.
# Receptacles are empty frames that function as placeholders for
# windows.
#
# Whereas bspwm_smart_move (defined above) will automatically insert
# a receptacle in the given direction by splitting the entire viewport.
# super + n ; r
r
	bspc node -i

# Insert the marked window (or focused if no marks) in the first
# matching receptacle (or preselection if no receptacles).
# super + n ; i
i
	bspwm_smart_presel

# Kill/remove the first matching receptacle from the current desktop.
# With shift, kill them all at once.
# super + n ; super + {_, shift + }r
{_, shift + }c
	{ \
	bspc node 'any.leaf.!window.local' -k, \
	bspwm_multifaceted_operation --kill-all-receptacles \
	}

# Summon all marked windows across all desktops to the current desktop.
# super + n ; m
m
	bspwm_multifaceted_operation --summon-all-marked

# Bring the windows of the given desktop to the current one.  With
# shift, send the current window to the given one.
# super + n ; super + {_, shift + }{0-9}
{_, shift + }{0-9}
	bspwm_multifaceted_operation {--bring-desktop-here,--send-desktop-there} {0-9}

# Close {or kill} all windows in the present desktop except the focused
# or any marked ones.
# super + n ; super + {_,shift + }q
{_,shift + }q
	bspwm_multifaceted_operation --{close,kill}-all-local-non-focused

# Assign the locked flag to all windows in the current desktop.  With
# shift, remove the locked flag from all.
{_, shift + }f
	bspwm_multifaceted_operation {--lock-all-local,--unlock-all-local}

# ----
#  Safety make an effort to disable any other typing
#  ----

{0-9,a-z,A-Z}
	echo "dummy" > /dev/null
