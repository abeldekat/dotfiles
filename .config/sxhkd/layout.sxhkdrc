# Add a layout layer on top of sxhkdrc in which direct keys manipulate the nodes in the tree 
# Most important operations: 
# Expand, contract, move, rotate, flip, circulate
# Read only, digits and letters are disabled for normal typing. 
# All super keys still apply. So, for example, navigation with super + hjkl is possible

########
# MODE #
########

# this mode explicitly overrides super + q effictively producing a toggle
# Back to normal mode.
{Escape, super + q}
    . $XDG_CONFIG_HOME/sxhkd/normal.mode

# ----
# move/resize
# ---

# Not standard
# > Will always grow for floating nodes. <
# Smart resize, will grow or shrink depending on location. Floating only grows
{h,j,k,l}
	n=50; \
  	{ d1=left;   d2=right;  dx=-$n; dy=0;   \
  	, d1=bottom; d2=top;    dx=0;   dy=$n;  \
  	, d1=top;    d2=bottom; dx=0;   dy=-$n; \
  	, d1=right;  d2=left;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# contract node, needed for floating
shift + {h,j,k,l}
	n=50; bspc node --resize {right -$n 0,top 0 $n,bottom 0 -$n,left $n 0}

# move a floating node
ctrl + {h,j,k,l}
	n=50; bspc node -v {-$n 0,0 $n,0 -$n,$n 0}

# ----
# manipulate the workspace
# ----

# Rotate all windows {counter-}clockwise by 90 degrees.
{_,shift + }r
	bspc node @/ --rotate {90,-90}

# Better than Vlip mnemonic in normal mode
# Note: First select an internal node to be flipped
# Flip the tree rooted at parent of selected node. Defaults is vertical 
{_,shift + }f
	bspc node @parent --flip {vertical,horizontal}

# Replaces the window inside the current node with other windows from the selected node.
# Does not change layout nor focus but otherwise resembles rotate
# Circulate the windows of the tree
{_,shift + }c
	bspc node @/ --circulate {forward,backward}

# ----
#  Safety make an effort to disable any other typing
#  ----

{0-9,a-z,A-Z}
	echo "dummy" > /dev/null
