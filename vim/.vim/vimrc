" vim: nowrap fdm=marker
" test ssh
scriptencoding utf-8

" Vim essential {{{1
set nocompatible
set nofoldenable
filetype plugin on

" Plugins Minpac {{{1
packadd minpac
if !exists('*minpac#init')
    ! git clone https://github.com/k-takata/minpac.git ~/.vim/pack/minpac/opt/minpac
    packadd minpac
    autocmd VimEnter * PackUpdate
endif
call minpac#init({'verbose': 3})
call minpac#add('tpope/vim-sensible')
call minpac#add('tpope/vim-repeat')
call minpac#add('tpope/vim-surround')
call minpac#add('junegunn/fzf.vim')
call minpac#add('vim-airline/vim-airline')
call minpac#add('k-takata/minpac', {'type': 'opt'})

call minpac#add('kana/vim-textobj-user')
call minpac#add('kana/vim-textobj-entire')

call minpac#add('tpope/vim-scriptease')
" Useful commands {{{2
command! PackUpdate source $MYVIMRC | call minpac#update()
command! PackClean  source $MYVIMRC | call minpac#clean()
command! PackStatus source $MYVIMRC | call minpac#status()

" Personal preferences not set by sensible.vim  {{{1 
let mapleader=','
let maplocalleader = "\\"
set hlsearch " sensible <C-L>
set incsearch smartcase
set history=5000
set nojoinspaces
set number
set relativenumber 
set noswapfile
if has('mouse') " the * register in a terminal?
  set mouse=nv
endif
set foldcolumn=3
set hidden
set clipboard^=unnamed,unnamedplus
" set listchars=tab:▸\ ,eol:¬
" set ruler, already done by powerline
set wildmode=full

" Colorscheme {{{1
if has('termguicolors')
"	set termguicolors
endif
"colorscheme elflord 

" Define a group for autocommands  {{{1
augroup vimrc
  autocmd!
augroup END

" Plugin configuration {{{1
" netrw.vim TODO {{{2
" FZF {{{2
nnoremap <C-p> :<C-u>FZF<CR>
" Airline {{{2
"let g:airline_powerline_fonts = 1

" Mappings and commands {{{1

" Override defaults {{{2
nnoremap Q <Nop> 
command! -nargs=0 -bang Qa qall!
command! -nargs=0 -bang QA qall!

" Fix the & command in normal+visual modes keep the flags of last search
nnoremap & :&&<Enter>
xnoremap & :&&<Enter>

"TODO test gQ

" mapleader {{{2
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
cnoremap <expr> %%  getcmdtype() == ':' ? fnameescape(expand('%:h')).'/' : '%%'
map <leader>ew :e %%
map <leader>es :sp %%
"map <leader>ev :vsp %%
map <leader>et :tabe %%
" Prompt to open file with same name, different extension
map <leader>er :e <C-R>=expand("%:r")."."<CR>

" Faster escape {{{2
inoremap jk <Esc>
"force learning it
inoremap <esc> <nop> 

" TODO the comma

" Windows {{{2
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" TODO {{{1
"find command: set path+=app/**
"Ack, vim plugin also possible, grep is posix, ack is perl compliant
"set grepprg=ack\ --nogroup\ --column\ $*
"set grepformat=%f:%l:%c:%m
"
"call minpac#add('ap/vim-css-color')
"call minpac#add('tpope/vim-unimpaired')
"call minpac#add('tpope/vim-commentary')
"call minpac#add('tpope/vim-projectionist')
"call minpac#add('tpope/vim-dispatch')
"call minpac#add('dense-analysis/ale')
"call minpac#add('scrooloose/nerdtree')
"call minpac#add('vim-syntastic/syntastic')
"
"call minpac#add('lifepillar/vim-solarized8', {'type': 'opt'})
"call minpac#add('morhetz/gruvbox', {'type': 'opt'})
