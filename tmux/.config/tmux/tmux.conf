# Not to forget
# l: previously selected window
# L: previously selected session

# Base configuration
# ------------------------------------------------------------------------

# change prefix: other candidates are backtick, ctrl u ctrl a ctrl s
unbind C-b
set -g prefix C-space
bind-key C-space send-prefix

# Default shell.  Note that `bash` is the only shell I use.  As such,
# everything in my dotfiles is built arround that constant.
#set -g default-shell /bin/bash

# Basic behaviour for interacting with `tmux` from/with the rest of the
# system.
#set -g mouse on
#set -s set-clipboard off # needed at least for gnome-terminal

# Need the following for expected behaviour and styling.  The default
# ensures compatibility with most (all?) CLI tools by being compliant
# with Xterm codes.
set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",*-256color:Tc"

# Key modes: the first is for the status line, the second for all other
# modes.  With these settings, it is possible to use Emacs navigation
# where no Vi normal mode motions are possible, but keep Vi-like
# behaviour for everything else.
set-option -g status-keys emacs
setw -g mode-keys vi
set -g history-limit 10000
set -g wrap-search on
set -sg escape-time 0
#set -g repeat-time 300

# ------------------------------------------------------------------------
# Key bindings
# ------------------------------------------------------------------------

# reload this config
unbind r
bind-key r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# cpdfd resize pane, tmux book:
#bind -nr M-S-Left swap-window -t -1
#bind -nr M-S-Right swap-window -t +1

bind c new-window -c "#{pane_current_path}"

# Create splits in PWD with Vim equivalent keys
# The default binding for s is list-sessions
bind -r v split-window -h -p 50 -c '#{pane_current_path}' # horizontally split active pane
bind -r s split-window -v -p 50 -c '#{pane_current_path}' # vertically split active pane
bind -r V split-window -fh -c '#{pane_current_path}' # horizontal for whole screen
bind -r S split-window -fv -c '#{pane_current_path}' # vertical for whole screen
# Chris Toomey more intuitive keybindings for splitting
#bind \ split-window -h -c "#{pane_current_path}"
#bind - split-window -v -c "#{pane_current_path}"

# Kill current pane (-a is for kill all except current)
bind -r x kill-pane
bind C-x kill-pane -a

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Resize panes with <prefix>Alt-{h,j,k,l}.  
bind -r M-h resize-pane -L 5
bind -r M-j resize-pane -D 2
bind -r M-k resize-pane -U 2
bind -r M-l resize-pane -R 5
# Chris Toomey:
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# TODO
# Toggle input sync across panes (displays status when invoked).  The
# use of <prefix>a is a mnemonic for "all".
#bind a set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# Toggle status line visibility
bind C-s set-option status

# TODO test this
# default swap above { swap below }
# Swap active pane with the last one
#bind Tab swap-pane -t !
# Swap active pane with the marked one
#bind C-Tab swap-pane

bind B break-pane
bind b break-pane -d 
bind J join-pane -b -s !
bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# ------------------------------------------------------------------------
# modes
# ------------------------------------------------------------------------

# default [
bind Escape copy-mode

# cpdfd copy mode
# Vim copy-paste behaviour using the clipboard
# default space starts selection, enter stops selection and ] pastes
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -selection clipboard -i"
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# ------------------------------------------------------------------------
# User Interface
# ------------------------------------------------------------------------

# Title and window settings
# NOTE auto rename is disabled for the given window upon manual rename.
set -g set-titles on # string shown on titlebars or programs such as `xwininfo`
set -g set-titles-string "#T" # title format
set -g automatic-rename on # name windows with <prefix>, (sessions with <prefix>$)
#set -g aggressive-resize off # manpage says "on" is bad for shellsâ€¦
#set -g alternate-screen on

# Start indices from 1 for both windows and panes.  Makes it easier for
# direct navigation.  Also renumber windows.
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# Feedback (numbers represent miliseconds)
#set -g display-panes-time 1200 # indicators for `display-panes` command
#set -g display-time 1200 # use 0 to keep status line messages until key press

# Alerts
#set -g monitor-bell on # check for terminal bell
set -g monitor-activity on # check for activity
set -g monitor-silence 0 # do not check for inactivity
#set -g bell-action any # monitor all windows
set -g activity-action other # monitor activity in other windows NOTE DO NOT TRACK CURRENT
set -g silence-action none # this should have no effect when: monitor-silence off
#set -g visual-activity on # show message, make no sound
#set -g visual-bell on # show message, make no sound

# Default window colours are inherited from the underlying terminal.
# This also allows for a transparent background.
#set -g window-style "bg=default,fg=default"
#set -g window-active-style "bg=default,fg=default"

# Pane styles.  Setting the bg to "default" allows for transparency, if
# the underlying terminal emulator is configured accordingly.
#set -g pane-border-style "bg=$tempus_bg_dim,fg=$tempus_bg_alt"
#set -g pane-active-border-style "bg=$tempus_bg_alt,fg=$tempus_fg_alt"

# Copy mode styles.  This governs such things as the visual selection
# block and the search results in the scroll buffer.  I choose to avoid
# setting to plain "reverse" because it is visually identical to Vim's
# selection, which can be confusing sometimes.
#set -g mode-style "bg=$tempus_bg_alt,fg=colour6,bold,underscore"

# Status line styles.  Used when displaying status messages and when
# using the command prompt.
#set -g message-style "bg=default,fg=default,bold"

# Clock mode options (I seldom use this, but okay).
#set -g clock-mode-style 24 # time format
#set -g clock-mode-colour "$tempus_fg_alt"

# ------------------------------------------------------------------------
# Status bar
# ------------------------------------------------------------------------

# Interval to update status bar in seconds.  Only affects some elements.
set -g status-interval 120

# Status bar general options about placement and overall style.
set -g status on
#set -g status-style "fg=$tempus_fg,bg=$tempus_bg_dim"
set -g status-position top
set -g status-justify left # this concerns the window list

# The status bar has three components: left, right, centre(the window list).
set -g status-left-length "100"
set -g status-right-length "100"

# Chris Toomey:
# Simplify status bar display.
set -g status-left-length 100
set -g status-fg black
set -g status-bg colour11
set -g status-left '[#S] '
set -g status-right "#(acpi | cut -d, -f2) #{?pane_synchronized,--SYNCED--,} #(date '+%a,%b %d-%H:%M ') "
# set -g status-right "#{?pane_synchronized,--SYNCED--,} #(date '+%a,%b %d-%H:%M ') "

# Status left and right
#set -g status-left "#{session_id}: #S #[bold]#{?pane_synchronized,#[fg=colour5] sync on ,} #{?pane_in_mode,#[fg=colour4] #{pane_mode}#{?selection_present, selecting,}#{?rectangle_toggle, rectangle,} ,}"
#set -g status-right "#(date '+%a,%b %d - %I:%M') #[bg=default,fg=default]#{?client_prefix,#[fg=colour2]#[bg=default]#[reverse],} #{?client_prefix,,}"

# Window status.  Always placed in the centre if `status-justifj
# "centre"`.  
# NOTE trigger alert to test bell: echo -e '\a'
#set -g window-status-separator ""
#set -g window-status-format " #I: #W #{?window_flags,#F , }"
#set -g window-status-current-format "#[bold][#I: #W #F]"
#set -g window-status-activity-style ""
#set -g window-status-bell-style "fg=colour1,bg=default"
#set -g window-status-style "fg=$tempus_fg_alt,bg=$tempus_bg_alt"
#set -g window-status-current-style "fg=$tempus_fg,bg=$tempus_bg"
#set -g window-status-current-style "fg=colour15,bg=colour8"
#set -g window-status-last-style ""

# ------------------------------------------------------------------------
# Testing, chris toomey
# ------------------------------------------------------------------------
# Workflow enhancement
bind-key h split-window -h "htop"
bind-key g split-window -h -c ~/ "vim +ls"

# break out with a new session from within tmux
bind C-b send-keys 'tat && exit' 'C-m'

# Switch session fuzzily
bind C-j split-window -v "tmux list-sessions -F '#{session_activity}:#{session_name}' | sort -nr | cut -d ':' -f 2 | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
#bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Always stay in tmux
# Note: ! defaults to break-pane
bind-key ! run-shell '(tmux switch-client -l || tmux switch-client -n) && tmux kill-session -t "#S" || tmux kill-session'
