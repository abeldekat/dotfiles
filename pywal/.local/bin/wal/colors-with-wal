#! /bin/bash

# The purpose of this script is to make it easier to play with the 
# colorschemes bundled with pywal.
# Their location:
# /usr/lib/python3.8/site-packages/pywal/
# After pywall generation this script can install the necessecary files
# thus removing the need to run pywal on system startup

# choosen themes from termite-color-switcher
#atelierdune
#brewer
#default
#google
#mocha
#monokai
#solarized
#tomorrow
#twilight

. colors-config

termpath=~/.config/termite
walpath=~/.cache/wal
mycolorspath="$MY_COLORS"
mythemesdark=~/.config/wal/darkthemes.csv
mythemeslight=~/.config/wal/lightthemes.csv
numberdark=59 #mocha
numberlight=35 #tempus_dawn
mythemes=$mythemesdark
number=0
walargs=()

while getopts "hln:p" o; do case "${o}" in
	h) printf "Optional arguments for custom use:\\n  \
		-l: Light themes\\n  \
		-p: TODO Preview, no installation\\n  \
		-n: Line number of theme in csv file\\n  \
		-h: Show this message\\n" && exit ;;
	l) 
		mythemes=$mythemeslight
		walargs+=('-l') ;;
	n) 
		number="$OPTARG" ;;
	*) 
		printf "Invalid option: -%s\\n" "$OPTARG" && exit ;;
	esac 
done

re='^[0-9]+$'
if ! [[ $number =~ $re ]] ; then
   echo "error: Not a number" >&2; exit 1
fi
[ $number -eq 0 ] && echo "Number is 0 thus switching to default..."
[ $number -eq 0 -a $mythemes = $mythemesdark ] && number=$numberdark
[ $number -eq 0 -a $mythemes = $mythemeslight ] && number=$numberlight


_reloadbspwm(){
	echo "Stop panel"
	pkill panel

	echo "reload bspwm"
	~/.config/bspwm/bspwmrc
}

_mergetermite(){
	echo "merging termite config"
	cat $walpath/colors.termite > /tmp/wall.out
	cat $termpath/option >> /tmp/wall.out
	mv /tmp/wall.out $termpath/config
}

_mergexresources(){
	echo "copy xcolors"
	cp $walpath/colors.Xresources $mycolorspath
	echo "merge xrdb"
	xrdb -merge ~/.Xresources
}

# -n skip background
# -s skip changing colors in terminals
# -t skip changing colors in tty
# -q quit 
# -a alha
# --saturate
_generate(){
	walargs+=('--theme '"$mytheme")
	walargs+=('-n')
	wal ${walargs[@]} 
}

_marktheme(){
	echo $mytheme > $mycolorspath/active-theme
}

_gettheme(){
	local result
	while IFS=, read -r tag1 tag2 theme comment; do
		#case "$tag" in
		#	"F") result="$theme" ;; 
		#esac
		n=$((n+1))
		[ $n -eq $number ] && result="$theme"
	done < $mythemes
	echo $result 
}

_go(){
	mytheme=$(_gettheme)

	_generate
	_mergetermite
	_mergexresources
	_marktheme
	_reloadbspwm
}

_go
